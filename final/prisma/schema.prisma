// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"  // 사용하는 db
  url      = env("DATABASE_URL")  // 프로젝트에 .env라는파일안에 "DATABASE_URL" 이라는 값을 갖고와서 그 값을 사용한다.( 환경변수 프로그램"실행"에 필요한 변수 를 저장하는 파일)
}

enum Provider{
  LOCAL
  KAKAO
}

model User{
  id String @id @default(uuid())

  email String @db.VarChar(200)
  nickname String @db.VarChar(200)
  password String @db.VarChar(200)
  provider Provider?
  img String? @db.VarChar(400)

  boards Board[]
  likes Like[]
}

enum Style{
  OPEN  // 오픈형
  DETACHABLE  // 분리형
  LAYERD  // 복층형
}

enum Option{
  ARECON
  DESK

}

model Board{
  seq Int @id @default(autoincrement())

  size Boolean  // 원룸, 투룸
  pyeong Int  // 평수
  style Style // 오픈형, 분리형 복층형,
  paied Boolean // 월세, 전세
  deposit Int // 보증금
  monthPay Int  //월세

  maintenance Boolean @default(false) // 관리비 기본은 없음
  maintenanceValue Int

  floor Int // 층수
  elevator Boolean @default(false)  // 엘리베이터 기본은 없음
  parking Boolean @default(false) // 주차유무 기본은 없음
  valueForOption Option // 옵션
  title String @db.VarChar(200) // 제목
  content String @db.LongText // 글

  images Image[]
  likes Like[]

  address Address @relation(fields: [addressId], references: [id])
  addressId Int
  

  userId String
  user User @relation(fields: [userId], references: [id])
}

model Image{
  seq Int @id @default(autoincrement())
  name String @db.VarChar(200)
  createdAt DateTime @default(now())

  boardId Int
  board Board @relation(fields: [boardId], references: [seq])
}

model Like {
  id      Int       @id @default(autoincrement())
  userId  String    //userId 필드는 user_id 와 연결
  boardId Int       // boardId 필드는 board_seq 와 연결
  
  // Foreign keys
  user      User      @relation(fields: [userId], references: [id])
  board     Board     @relation(fields: [boardId], references: [seq])
}

model Address {
  id       Int      @id @default(autoincrement())
  zipNum   String   @db.VarChar(200)
  sido     String   @db.VarChar(200)
  gugun    String   @db.VarChar(200)
  dong     String   @db.VarChar(200)
  zipcode  String   @db.VarChar(200)
  bunji    String   @db.VarChar(200)

  // Address 모델과 Board 모델 간의 관계 정의
  boards   Board[]
}